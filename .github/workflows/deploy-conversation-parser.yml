name: Deploy Conversation Parser

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'services/conversation-parser/**'
      - 'shared/**'
      - '.github/workflows/deploy-conversation-parser.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'PROD' || 'DEV') }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private
        registries: "151508346231"
    
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'PROD' || 'DEV') }}
      run: |
        # Copy shared packages
        cp -r shared services/conversation-parser/
        
        # Build and push
        docker build -t conversation-parser:latest services/conversation-parser
        docker tag conversation-parser:latest $ECR_REGISTRY/drellia-audit/conversation-parser-${ENVIRONMENT,,}:latest
        docker push $ECR_REGISTRY/drellia-audit/conversation-parser-${ENVIRONMENT,,}:latest
        
        # Update ECS service
        aws ecs update-service \
          --cluster DrelliaAudit-${ENVIRONMENT} \
          --service conversation-parser-${ENVIRONMENT} \
          --force-new-deployment \
          --region eu-north-1